services:
  chain:
    build: .
    container_name: arena-chain-hardhat
    working_dir: /workspace
    environment:
      CHAIN_ID: "31337"
    command: >-
      sh -c "npx hardhat node --hostname 0.0.0.0 --port 8545"
    ports:
      - "8546:8545"

  postgres:
    image: postgres:15-alpine
    container_name: arena-postgres
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: prediction
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d prediction"]
      interval: 10s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  contracts:
    build: .
    container_name: arena-contracts
    environment:
      RPC_URL: http://chain:8545
      CHAIN_ID: "31337"
    depends_on:
      - chain
    restart: "no"
    volumes:
      - shared_artifacts:/artifacts
    command: >-
      sh -c "\
      npx hardhat test && \
      npx hardhat run scripts/deploy.js --network localhost && \
      node scripts/postDeploy.js && \
      node -e \"const fs=require('fs');const p='./deployments';const f=fs.readdirSync(p).find(x=>x.startsWith('deployment-'));const j=JSON.parse(fs.readFileSync(p+'/'+f));fs.writeFileSync('/artifacts/contract_address', j.contract);\" && \
      cp -r artifacts /artifacts/ && \
      echo 'Contracts ready'"

  api-dev:
    build: ../arena-be
    container_name: arena-api-dev
    env_file:
      - ../arena-be/.env
    environment:
      PYTHONPATH: /app
      BLOCKDAG_RPC_URL: http://chain:8545
      CHAIN_ID: "31337"
      ALLOWED_ORIGINS: "*"
    ports:
      - "8001:8000"
    volumes:
      - ../arena-be:/app
      - shared_artifacts:/artifacts
    depends_on:
      postgres:
        condition: service_healthy
      contracts:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request,sys; sys.exit(0 if urllib.request.urlopen('http://localhost:8000/health', timeout=3).getcode()==200 else 1)"]
      interval: 30s
      timeout: 5s
      retries: 3
    command: >-
      sh -c "\
      for i in 1 2 3 4 5 6 7 8 9 10; do \
        if [ -f /artifacts/contract_address ]; then break; fi; \
        echo 'Waiting for contract address...'; sleep 3; \
      done; \
      export CONTRACT_ADDRESS=\$(cat /artifacts/contract_address 2>/dev/null || echo \"$$CONTRACT_ADDRESS\") && \
      if [ -z \"$$PRIVATE_KEY\" ] && [ -f /artifacts/ai_bot_private_key ]; then export PRIVATE_KEY=\$(cat /artifacts/ai_bot_private_key); fi && \
      alembic upgrade head && \
      uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  frontend:
    image: node:20-alpine
    container_name: arena-frontend
    working_dir: /app
    environment:
      - VITE_API_URL=http://localhost:8001
      - VITE_RPC_URL=http://localhost:8546
      - VITE_CHAIN_ID=31337
    ports:
      - "5173:5173"
    volumes:
      - ../arena-fe:/app
      - /app/node_modules
    depends_on:
      api-dev:
        condition: service_started
      chain:
        condition: service_started
    command: sh -c "npm ci || npm install && npm run dev -- --host 0.0.0.0 --port 5173"

volumes:
  pgdata:
  shared_artifacts:
